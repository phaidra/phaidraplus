
server {
	listen   80; ## listen for ipv4; this line is default and implied
    server_name    phaidra-plus.univie.ac.at;
    return         301 https://$server_name$request_uri;
}

server {
    listen   443 ssl; 
	

    set $phaidraPlusRoot /srv/www/phaidraplus;
    
    ssl                        on;
    #ssl_certificate       /etc/apache2/ssl/cert-6196-phaidra-plus.univie.ac.at.pem;
    #ssl_certificate_key  /etc/ssl/private/phaidra-plus.univie.ac.at.key;
    ssl_certificate       $phaidraPlusRoot/certs/cert-6196-phaidra-plus.univie.ac.at.pem;
    ssl_certificate_key  $phaidraPlusRoot/certs/phaidra-plus.univie.ac.at.key;

    ssl_session_timeout 30m;

    

	root $phaidraPlusRoot;
    
	index index.php index.html index.htm;

	server_name phaidra-plus.unvie.ac.at;

    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    
    location / {
        if ( $request_uri ~ '(http)') {
            return 403;
        }
    }

    location /config/nginx {
        return 403;
    }
    location /config/php5 {
        return 403;
    }
    location /config/phaidra {
        return 403;
    }

  
    location ~* ^/standalone.+\.(ogg|css|js|ogv|svg|hbs|svgz|otf|mp4|ttf|less|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
        root $phaidraPlusRoot;
        rewrite ^/standalone/(.+)$ /$1;
    }
    location /standalone {
        root $phaidraPlusRoot;
        rewrite ^/standalone/?(.+)$ /index.php?standalone=1&$1;
    }

    # SHARING LINKS
    location ~* ^/share.+\.(ogg|css|js|ogv|svg|hbs|svgz|otf|mp4|ttf|less|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
        root $phaidraPlusRoot;
        rewrite ^/share/(.+)$ /$1;
    }
    location /share {
        root $phaidraPlusRoot;
        rewrite ^/share/?(.+)$ /index.php?standalone=1&$1;
    }


    ## DOWNLOAD FULL OBJECT
    location ~* ^/phaidra-temp/download/.*/download$ {
        try_files $uri @phaidra-download-object;
    }
    location ~* ^/phaidra/download/.*/download$ {
        try_files $uri @phaidra-download-object;
    }

    ## DOWNLOAD PREVIEW OBJECT
    location ~* ^/phaidra-temp/download/.*$ {
        try_files $uri @phaidra-download;
    }
    location ~* ^/phaidra/download/.*$ {
        try_files $uri @phaidra-download;
    }

    ## Regular Reqeust 
    location ~* ^/phaidra-temp/.*$ {
        try_files $uri @phaidra;
    }
    location ~* ^/phaidra/.*$ {
        try_files $uri @phaidra;
    }
   
    
    location /pp/ {

        if ($request_method = 'OPTIONS') {
            
            #add_header "Access-Control-Allow-Origin" $http_origin;
            add_header 'Access-Control-Allow-Methods' 'POST, GET, PUT, OPTIONS, DELETE';
            add_header Access-Control-Allow-Headers "accept, content-type, Authorization, X-XSRF-TOKEN, XSRF-TOKEN";
            #add_header 'Access-Control-Max-Age' '1728000';
            add_header Access-Control-Allow-Origin *;
            #add_header 'Content-Type' 'text/plain; charset=UTF-8';
            #add_header 'Content-Type' '';
            return 200;
        }

        root /var/www/phaidra-plus-backend;
        rewrite ^/pp/(.*)$ /$1 break;
        
        add_header X-Reverse-Proxy "nginx";
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Proto "http";
        
        proxy_set_header Authorization $http_authorization;
        add_header Access-Control-Allow-Headers "accept, content-type, Authorization, X-XSRF-TOKEN";
        add_header Access-Control-Allow-Origin *;
            
        proxy_pass http://127.0.0.1:3000/;
        proxy_redirect http://127.0.0.1:3000/   /pp/;
    }

    location @phaidra {
       
         proxy_cache fedora-cache;
         proxy_cache_valid  200 302 304 2h;
         proxy_cache_valid  500 403 307 1s;
         proxy_cache_valid  404      1s;
         proxy_intercept_errors on;
         proxy_cache_key fedora$request_uri;
         error_page 401 @autherror;
         proxy_set_header   Host             $host;
         proxy_set_header   X-Real-IP        $remote_addr;
         proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
     
         proxy_redirect off;
         proxy_cache_use_stale updating;
         proxy_ignore_headers X-Accel-Expires Expires Cache-Control;
         add_header X-Cache-Status $upstream_cache_status;
         add_header Cache-Control "max-age=2h"; 
         access_log off;
         expires 2h; 
         log_not_found off;

         if ( $request_uri ~ /phaidra/) {
            rewrite ^/phaidra/(download/)*(.+)$ /$2 break;
            proxy_pass https://phaidra.univie.ac.at;
        }
        if ( $request_uri ~ /phaidra-temp/) {
            rewrite ^/phaidra-temp/(download/)*(.+)$ /$2 break;
            proxy_pass https://phaidra-temp.univie.ac.at;
        }
    }

    location @phaidra-download-object {
       
         proxy_cache fedora-cache;
         proxy_cache_valid  200 302 304 2h;
         proxy_cache_valid  500 403 307 1s;
         proxy_cache_valid  404      1s;
         proxy_intercept_errors on;
         proxy_cache_key fedora$request_uri;
         error_page 401 @autherror;
         proxy_set_header   Host             $host;
         proxy_set_header   X-Real-IP        $remote_addr;
         proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
         
         
         proxy_redirect off;
         proxy_cache_use_stale updating;
         proxy_ignore_headers X-Accel-Expires Expires Cache-Control;
         add_header X-Cache-Status $upstream_cache_status;
         add_header Cache-Control "max-age=2h"; 
         access_log off;
         expires 2h; 
         log_not_found off;

         if ( $request_uri ~ /phaidra/) {
            rewrite ^/phaidra/(download/)*(.+)$ /fedora/$2 break;
            proxy_pass https://fedora.phaidra.univie.ac.at;
        }
        if ( $request_uri ~ /phaidra-temp/) {
            rewrite ^/phaidra-temp/(download/)*(.+)$ /fedora/$2 break;
            proxy_pass https://fedora.phaidra-temp.univie.ac.at;
        }
    }

    location @phaidra-download {
         
         add_header Content-disposition "attachment; filename=phaidraplus.jpg";
         
         proxy_cache fedora-cache;
         proxy_cache_valid  200 302 304 2h;
         proxy_cache_valid  500 403 307 1s;
         proxy_cache_valid  404      1s;
         proxy_intercept_errors on;
         proxy_cache_key fedora$request_uri;
         error_page 401 @autherror;
         proxy_set_header   Host             $host;
         proxy_set_header   X-Real-IP        $remote_addr;
         proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
         
         proxy_pass_header Content-Type;
         proxy_pass_header Content-Disposition;
         proxy_pass_header Content-Length;
         
         proxy_redirect off;
         proxy_cache_use_stale updating;
         proxy_ignore_headers X-Accel-Expires Expires Cache-Control;
         add_header X-Cache-Status $upstream_cache_status;
         add_header Cache-Control "max-age=2h"; 
         access_log off;
         expires 2h; 
         log_not_found off;
         
         if ( $request_uri ~ /phaidra/) {
            rewrite ^/phaidra/(download/)*(.+)$ /$2 break;
            proxy_pass https://phaidra.univie.ac.at;
        }
        if ( $request_uri ~ /phaidra-temp/) {
            rewrite ^/phaidra-temp/(download/)*(.+)$ /$2 break;
            proxy_pass https://phaidra-temp.univie.ac.at;
        }
    }


   

    location @autherror {
        rewrite ^ /theme/img/locked.png permanent;
        break;
    }

        location ~* \.(eot|ttf|woff)$ {
            add_header Access-Control-Allow-Origin *;
            access_log off; 
            log_not_found off; 
            expires 2d;
        }

        location ~* ^.+\.(ogg|ogv|svg|svgz|otf|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
            access_log off; 
            gzip_static on;
            log_not_found off; 
            expires 1s;
        }

        location ~* ^.+\.(json|js|css|hbs|xml|html|less|map)$ {
            access_log off;
            gzip_static on; 
            log_not_found off; 
            expires epoch;
        }

        location ~ \.php$ {
            # Zero-day exploit defense.
            # http://forum.nginx.org/read.php?2,88845,page=3
            # Won't work properly (404 error) if the file is not stored on this server, which is entirely possible with php-fpm/php-fcgi.
            # Comment the 'try_files' line out if you set up php-fpm/php-fcgi on another machine.  And then cross your fingers that you won't get hacked.
            try_files $uri =404;

            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini

            include fastcgi_params;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #   fastcgi_intercept_errors on;
            fastcgi_pass phpcgi;
        }
	# deny access to .htaccess files, if Apache's document root
	location ~ /\.ht {
		deny all;
	}
    ## Disallow access to .bzr, .git, .hg, .svn, .cvs directories: return
## 404 as not to disclose information.
location ^~ /.bzr {
    return 404;
}

location ^~ /.git {
    return 404;
}

location ^~ /.hg {
    return 404;
}

location ^~ /.svn {
    return 404;
}

location ^~ /.cvs {
    return 404;
}

## Disallow access to patches directory.
location ^~ /patches {
    return 404;
}

## Disallow access to drush backup directory.
location ^~ /backup {
    return 404;
}

## Disable access logs for robots.txt.
location = /robots.txt {
    access_log off;
    ## Add support for the robotstxt module
    ## http://drupal.org/project/robotstxt.
    try_files $uri @drupal-no-args;
}
}
